esphome:
  name: "water-management"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "xxx"
    password: "xxx"

captive_portal:

dallas:
  pin: GPIO4
  update_interval: 1s


sensor:
  - platform: pulse_counter
    name: "Water flow rate"
    id: water_flow_rate
    icon: mdi:water
    pin: GPIO5
    update_interval: 60s
    accuracy_decimals: 1
    filters:
      - multiply: 1 # (60s/60 pulses per liter)
    unit_of_measurement: "l"

    total:
      name: "Water usage total"
      unit_of_measurement: "l"
      accuracy_decimals: 1
      id: water_usage_total
      filters:
        - multiply: 0.0167 # (1/60 pulses per liter)

  - platform: adc
    pin: A0
    name: "Water height"
    id: water_height
    unit_of_measurement: "m"
    accuracy_decimals: 1
    # ADC to measure up to 3.9V
    attenuation: 11db
    filters:
    # Pressure: 0.5-4.5V -> 0.0-0.5bar = (V - 0.5) * 0.125
    # 1 bar = 100000 N/m2
    # Height: N/m2 / (1000 * 9.81) = (V - 0.5) * 0.125 * 100000 / (1000 * 9.81) = (V - 0.5) * 1.2742
    - lambda: return (x - 0.5) * 1.274;
    - quantile:
        window_size: 30
        send_every: 30
    update_interval: 1s

  - platform: adc
    pin: A0
    name: "Water pressure"
    id: water_pressure
    unit_of_measurement: "bar"
    accuracy_decimals: 1
    # ADC to measure up to 3.9V
    attenuation: 11db
    filters:
    # Pressure: 0.5-4.5V -> 0.0-0.5bar = (V - 0.5) * 0.125
    - calibrate_linear:
      - 0.5 -> 0
      - 4.5 -> 0.5
    - quantile:
        window_size: 30
        send_every: 30
    update_interval: 1s

  - platform: dallas
    address: 0xd10921b13892ac28
    name: "Water temperature"
    id: water_temperature
    resolution: 12
